`include "cmos.v"
/* Generated by Yosys 0.8+500 (git sha1 49d641d9, clang 6.0.0-1ubuntu2 -fPIC -Os) */

(* src = "sum_pipe_e.v:1" *)
module sum_pipe_e(dataA, dataB, clk, reset_L, sum30_dd_e);
  (* src = "sum_pipe_e.v:25" *)
  wire _000_;
  (* src = "sum_pipe_e.v:25" *)
  wire [1:0] _001_;
  (* src = "sum_pipe_e.v:25" *)
  wire [1:0] _002_;
  (* src = "sum_pipe_e.v:25" *)
  wire [1:0] _003_;
  (* src = "sum_pipe_e.v:25" *)
  wire [3:0] _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  (* src = "sum_pipe_e.v:9" *)
  (* unused_bits = "0" *)
  wire acarreo;
  (* src = "sum_pipe_e.v:9" *)
  wire acarreo_d;
  (* src = "sum_pipe_e.v:4" *)
  input clk;
  (* src = "sum_pipe_e.v:2" *)
  input [3:0] dataA;
  (* src = "sum_pipe_e.v:10" *)
  wire [1:0] dataA_d;
  (* src = "sum_pipe_e.v:3" *)
  input [3:0] dataB;
  (* src = "sum_pipe_e.v:10" *)
  wire [1:0] dataB_d;
  (* src = "sum_pipe_e.v:5" *)
  input reset_L;
  (* src = "sum_pipe_e.v:10" *)
  (* unused_bits = "0 1" *)
  wire [1:0] sum10;
  (* src = "sum_pipe_e.v:10" *)
  wire [1:0] sum10_d;
  (* src = "sum_pipe_e.v:11" *)
  (* unused_bits = "0 1 2 3" *)
  wire [3:0] sum30_d;
  (* src = "sum_pipe_e.v:6" *)
  output [3:0] sum30_dd_e;
  NOT _044_ (
    .A(reset_L),
    .Y(_005_)
  );
  NOT _045_ (
    .A(dataA_d[1]),
    .Y(_006_)
  );
  NOT _046_ (
    .A(dataB_d[1]),
    .Y(_007_)
  );
  NOT _047_ (
    .A(acarreo_d),
    .Y(_008_)
  );
  NAND _048_ (
    .A(sum10_d[1]),
    .B(reset_L),
    .Y(_009_)
  );
  NOT _049_ (
    .A(_009_),
    .Y(_004_[1])
  );
  NAND _050_ (
    .A(dataA_d[0]),
    .B(dataB_d[0]),
    .Y(_010_)
  );
  NOT _051_ (
    .A(_010_),
    .Y(_011_)
  );
  NOR _052_ (
    .A(dataA_d[0]),
    .B(dataB_d[0]),
    .Y(_012_)
  );
  NOT _053_ (
    .A(_012_),
    .Y(_013_)
  );
  NAND _054_ (
    .A(_010_),
    .B(_013_),
    .Y(_014_)
  );
  NOR _055_ (
    .A(_008_),
    .B(_014_),
    .Y(_015_)
  );
  NAND _056_ (
    .A(_008_),
    .B(_014_),
    .Y(_016_)
  );
  NAND _057_ (
    .A(reset_L),
    .B(_016_),
    .Y(_017_)
  );
  NOR _058_ (
    .A(_015_),
    .B(_017_),
    .Y(_004_[2])
  );
  NOR _059_ (
    .A(_011_),
    .B(_015_),
    .Y(_018_)
  );
  NOR _060_ (
    .A(_006_),
    .B(dataB_d[1]),
    .Y(_019_)
  );
  NOR _061_ (
    .A(dataA_d[1]),
    .B(_007_),
    .Y(_020_)
  );
  NOR _062_ (
    .A(_019_),
    .B(_020_),
    .Y(_021_)
  );
  NAND _063_ (
    .A(_018_),
    .B(_021_),
    .Y(_022_)
  );
  NOR _064_ (
    .A(_018_),
    .B(_021_),
    .Y(_023_)
  );
  NAND _065_ (
    .A(reset_L),
    .B(_022_),
    .Y(_024_)
  );
  NOR _066_ (
    .A(_023_),
    .B(_024_),
    .Y(_004_[3])
  );
  NAND _067_ (
    .A(dataA[0]),
    .B(dataB[0]),
    .Y(_025_)
  );
  NOT _068_ (
    .A(_025_),
    .Y(_026_)
  );
  NOR _069_ (
    .A(dataA[0]),
    .B(dataB[0]),
    .Y(_027_)
  );
  NOT _070_ (
    .A(_027_),
    .Y(_028_)
  );
  NAND _071_ (
    .A(reset_L),
    .B(_028_),
    .Y(_029_)
  );
  NOR _072_ (
    .A(_026_),
    .B(_029_),
    .Y(_003_[0])
  );
  NOR _073_ (
    .A(dataA[1]),
    .B(dataB[1]),
    .Y(_030_)
  );
  NAND _074_ (
    .A(dataA[1]),
    .B(dataB[1]),
    .Y(_031_)
  );
  NOT _075_ (
    .A(_031_),
    .Y(_032_)
  );
  NOR _076_ (
    .A(_030_),
    .B(_032_),
    .Y(_033_)
  );
  NOR _077_ (
    .A(_025_),
    .B(_033_),
    .Y(_034_)
  );
  NAND _078_ (
    .A(_025_),
    .B(_033_),
    .Y(_035_)
  );
  NOT _079_ (
    .A(_035_),
    .Y(_036_)
  );
  NOR _080_ (
    .A(_034_),
    .B(_036_),
    .Y(_037_)
  );
  NOR _081_ (
    .A(_005_),
    .B(_037_),
    .Y(_003_[1])
  );
  NAND _082_ (
    .A(reset_L),
    .B(_035_),
    .Y(_038_)
  );
  NOR _083_ (
    .A(_030_),
    .B(_038_),
    .Y(_000_)
  );
  NAND _084_ (
    .A(reset_L),
    .B(dataB[2]),
    .Y(_039_)
  );
  NOT _085_ (
    .A(_039_),
    .Y(_002_[0])
  );
  NAND _086_ (
    .A(reset_L),
    .B(dataB[3]),
    .Y(_040_)
  );
  NOT _087_ (
    .A(_040_),
    .Y(_002_[1])
  );
  NAND _088_ (
    .A(reset_L),
    .B(dataA[2]),
    .Y(_041_)
  );
  NOT _089_ (
    .A(_041_),
    .Y(_001_[0])
  );
  NAND _090_ (
    .A(reset_L),
    .B(dataA[3]),
    .Y(_042_)
  );
  NOT _091_ (
    .A(_042_),
    .Y(_001_[1])
  );
  NAND _092_ (
    .A(reset_L),
    .B(sum10_d[0]),
    .Y(_043_)
  );
  NOT _093_ (
    .A(_043_),
    .Y(_004_[0])
  );
  (* src = "sum_pipe_e.v:25" *)
  DFF _094_ (
    .C(clk),
    .D(_000_),
    .Q(acarreo_d)
  );
  (* src = "sum_pipe_e.v:25" *)
  DFF _095_ (
    .C(clk),
    .D(_001_[0]),
    .Q(dataA_d[0])
  );
  (* src = "sum_pipe_e.v:25" *)
  DFF _096_ (
    .C(clk),
    .D(_001_[1]),
    .Q(dataA_d[1])
  );
  (* src = "sum_pipe_e.v:25" *)
  DFF _097_ (
    .C(clk),
    .D(_002_[0]),
    .Q(dataB_d[0])
  );
  (* src = "sum_pipe_e.v:25" *)
  DFF _098_ (
    .C(clk),
    .D(_002_[1]),
    .Q(dataB_d[1])
  );
  (* src = "sum_pipe_e.v:25" *)
  DFF _099_ (
    .C(clk),
    .D(_004_[0]),
    .Q(sum30_dd_e[0])
  );
  (* src = "sum_pipe_e.v:25" *)
  DFF _100_ (
    .C(clk),
    .D(_004_[1]),
    .Q(sum30_dd_e[1])
  );
  (* src = "sum_pipe_e.v:25" *)
  DFF _101_ (
    .C(clk),
    .D(_004_[2]),
    .Q(sum30_dd_e[2])
  );
  (* src = "sum_pipe_e.v:25" *)
  DFF _102_ (
    .C(clk),
    .D(_004_[3]),
    .Q(sum30_dd_e[3])
  );
  (* src = "sum_pipe_e.v:25" *)
  DFF _103_ (
    .C(clk),
    .D(_003_[0]),
    .Q(sum10_d[0])
  );
  (* src = "sum_pipe_e.v:25" *)
  DFF _104_ (
    .C(clk),
    .D(_003_[1]),
    .Q(sum10_d[1])
  );
endmodule

(* top =  1  *)
(* src = "sumador_e.v:3" *)
module sumador_e(idx, dataA, dataB, clk, reset_L, sum30_dd_e, idx_dd_e);
  (* src = "sumador_e.v:16" *)
  wire [3:0] _00_;
  (* src = "sumador_e.v:16" *)
  wire [3:0] _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  (* src = "sumador_e.v:7" *)
  input clk;
  (* src = "sumador_e.v:5" *)
  input [3:0] dataA;
  (* src = "sumador_e.v:6" *)
  input [3:0] dataB;
  (* src = "sumador_e.v:4" *)
  input [3:0] idx;
  (* src = "sumador_e.v:13" *)
  wire [3:0] idx_d;
  (* src = "sumador_e.v:10" *)
  output [3:0] idx_dd_e;
  (* src = "sumador_e.v:8" *)
  input reset_L;
  (* src = "sumador_e.v:9" *)
  output [3:0] sum30_dd_e;
  NAND _10_ (
    .A(idx_d[1]),
    .B(reset_L),
    .Y(_02_)
  );
  NOT _11_ (
    .A(_02_),
    .Y(_01_[1])
  );
  NAND _12_ (
    .A(reset_L),
    .B(idx_d[2]),
    .Y(_03_)
  );
  NOT _13_ (
    .A(_03_),
    .Y(_01_[2])
  );
  NAND _14_ (
    .A(reset_L),
    .B(idx_d[3]),
    .Y(_04_)
  );
  NOT _15_ (
    .A(_04_),
    .Y(_01_[3])
  );
  NAND _16_ (
    .A(reset_L),
    .B(idx[0]),
    .Y(_05_)
  );
  NOT _17_ (
    .A(_05_),
    .Y(_00_[0])
  );
  NAND _18_ (
    .A(reset_L),
    .B(idx[1]),
    .Y(_06_)
  );
  NOT _19_ (
    .A(_06_),
    .Y(_00_[1])
  );
  NAND _20_ (
    .A(reset_L),
    .B(idx[2]),
    .Y(_07_)
  );
  NOT _21_ (
    .A(_07_),
    .Y(_00_[2])
  );
  NAND _22_ (
    .A(reset_L),
    .B(idx[3]),
    .Y(_08_)
  );
  NOT _23_ (
    .A(_08_),
    .Y(_00_[3])
  );
  NAND _24_ (
    .A(reset_L),
    .B(idx_d[0]),
    .Y(_09_)
  );
  NOT _25_ (
    .A(_09_),
    .Y(_01_[0])
  );
  (* src = "sumador_e.v:16" *)
  DFF _26_ (
    .C(clk),
    .D(_00_[0]),
    .Q(idx_d[0])
  );
  (* src = "sumador_e.v:16" *)
  DFF _27_ (
    .C(clk),
    .D(_00_[1]),
    .Q(idx_d[1])
  );
  (* src = "sumador_e.v:16" *)
  DFF _28_ (
    .C(clk),
    .D(_00_[2]),
    .Q(idx_d[2])
  );
  (* src = "sumador_e.v:16" *)
  DFF _29_ (
    .C(clk),
    .D(_00_[3]),
    .Q(idx_d[3])
  );
  (* src = "sumador_e.v:16" *)
  DFF _30_ (
    .C(clk),
    .D(_01_[0]),
    .Q(idx_dd_e[0])
  );
  (* src = "sumador_e.v:16" *)
  DFF _31_ (
    .C(clk),
    .D(_01_[1]),
    .Q(idx_dd_e[1])
  );
  (* src = "sumador_e.v:16" *)
  DFF _32_ (
    .C(clk),
    .D(_01_[2]),
    .Q(idx_dd_e[2])
  );
  (* src = "sumador_e.v:16" *)
  DFF _33_ (
    .C(clk),
    .D(_01_[3]),
    .Q(idx_dd_e[3])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "sumador_e.v:27" *)
  sum_pipe_e instance_sum_pipe_e_0 (
    .clk(clk),
    .dataA(dataA),
    .dataB(dataB),
    .reset_L(reset_L),
    .sum30_dd_e(sum30_dd_e)
  );
endmodule
